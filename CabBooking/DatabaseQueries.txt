create table Orders (
        orderId serial,
        customerLatitude float8 not null,
        customerLongitude float8 not null,
        customerName varchar(255) not null,
        primary key (orderId)
    );
create table Drivers (
        driverId serial,
        currentLatitude float8 not null,
        currentLogitude float8 not null,
        driverName varchar(255) not null,
        status varchar(255) not null,
		orderId int,
        primary key (driverId),
		CONSTRAINT fk_orders
       FOREIGN KEY(orderId) 
	  REFERENCES Orders(orderId)
    );

insert into Drivers (driverName, currentLatitude, currentLogitude, status) values('D1',32.9697, 29.46786,'AVAILABLE');
insert into Drivers (driverName, currentLatitude, currentLogitude, status) values('D2',20.9697, 18.46786,'AVAILABLE');
insert into Drivers (driverName, currentLatitude, currentLogitude, status) values('D3',21.9697, 23.46786,'AVAILABLE');
insert into Drivers (driverName, currentLatitude, currentLogitude, status) values('D4',24.9697, 26.46786,'AVAILABLE');
insert into Drivers (driverName, currentLatitude, currentLogitude, status) values('D5',27.9697, 28.46786,'AVAILABLE');

SELECT currentLatitude, currentLogitude, SQRT(
    POWER(69.1 * (currentLatitude - 21.9697), 2) +
    POWER(69.1 * (19.46786 - currentLogitude) * COS(currentLatitude / 57.3), 2)) AS distance
FROM Driver ORDER BY distance DESC limit 1;
HAVING distance < 25 ORDER BY distance;

